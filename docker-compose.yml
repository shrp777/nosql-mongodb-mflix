services:
  app:
    image: node:alpine
    ports:
      - 3333:3000
    command: sh -c 'npm i && npm run watch'
    working_dir: /usr/src/app
    volumes:
      - ./app:/usr/src/app/
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - mflix

  db:
    image: mongo
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 50s
    ports:
      - 27018:27017
    command: mongod --quiet --logpath /dev/null
    env_file: .env
    volumes:
      #- ./db/data:/data/db # synchronisation machine hôte / container Docker (pour sauvegarde locale des données)
      - ./db/import:/tmp/import
      - ./db/import/init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh
    networks:
      - mflix

  mongo-express:
    image: mongo-express
    ports:
      - 8081:8081
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - mflix

networks:
  mflix:
    driver: bridge
